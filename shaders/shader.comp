#version 450

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(binding = 2, rgba8) uniform writeonly image2D storageImage;

vec2 brickTile(vec2 _st, float _zoom){
    _st *= _zoom;
    _st.x += step(1.0, mod(_st.y, 2.0)) * 0.5;
    return fract(_st);
}

float box(vec2 _st, vec2 _size){
    _size = vec2(0.90, 0.9) - _size * 0.5;
    vec2 uv = smoothstep(_size, _size + vec2(1e-4), _st);
    uv *= smoothstep(_size, _size + vec2(1e-4), vec2(1.0) - _st);
    return uv.x * uv.y;
}

void main() {
    ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
    ivec2 imageSize = imageSize(storageImage);
    vec2 st = vec2(storePos) / vec2(imageSize);

    st = brickTile(st, 5.0);

    float b = box(st, vec2(0.9));

    vec3 color = vec3(b);

    imageStore(storageImage, storePos, vec4(color, 1.0));
}
